"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5358],{4137:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),u=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,h=d["".concat(o,".").concat(m)]||d[m]||c[m]||i;return n?a.createElement(h,l(l({ref:t},p),{},{components:n})):a.createElement(h,l({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var u=2;u<i;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2909:function(e,t,n){n.d(t,{ZP:function(){return d}});var a=n(3117),r=n(102),i=n(7294),l=n(4137),s=n(2511),o=n(7130),u=function(e){var t="https://github.com/feature-sliced/documentation/issues/"+e.ticket;return i.createElement("div",null,i.createElement("p",null,(0,o.I)({id:"shared.wip.title"})),i.createElement("p",null,(0,o.I)({id:"shared.wip.subtitle"})),i.createElement("ul",null,i.createElement("li",null,(0,o.I)({id:"shared.wip.var.feedback.base"}),i.createElement(s.Z,{to:t},(0,o.I)({id:"shared.wip.var.feedback.link"}))),i.createElement("li",null,(0,o.I)({id:"shared.wip.var.material.base"}),i.createElement(s.Z,{to:"https://t.me/feature_sliced"},(0,o.I)({id:"shared.wip.var.material.link"}))),i.createElement("li",null,(0,o.I)({id:"shared.wip.var.contribute.base"}),i.createElement(s.Z,{to:"https://github.com/feature-sliced/documentation/blob/master/CONTRIBUTING.md"},(0,o.I)({id:"shared.wip.var.contribute.link"})))),i.createElement("br",null),i.createElement("p",null,i.createElement("i",null,"\ud83c\udf70 Stay tuned!")))},p=["components"],c={toc:[]};function d(e){var t=e.components,n=(0,r.Z)(e,p);return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"WIP")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)(u,{ticket:n.ticket,mdxType:"WIP"}))))}d.isMDXComponent=!0},2713:function(e,t,n){var a=(0,n(7294).createContext)(void 0);t.Z=a},6729:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return N},default:function(){return x},frontMatter:function(){return v},metadata:function(){return b},toc:function(){return y}});var a=n(3117),r=n(102),i=n(7294),l=n(4137),s=n(2909),o=n(1048),u=n(2713);var p=function(){var e=(0,i.useContext)(u.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},c=n(2613),d=n(6010),m="tabItem_1uMI";function h(e){var t,n,a,r=e.lazy,l=e.block,s=e.defaultValue,o=e.values,u=e.groupId,h=e.className,k=i.Children.map(e.children,(function(e){if((0,i.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=o?o:k.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),g=(0,c.lx)(f,(function(e,t){return e.value===t.value}));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var v=null===s?s:null!=(t=null!=s?s:null==(n=k.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(a=k[0])?void 0:a.props.value;if(null!==v&&!f.some((function(e){return e.value===v})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+f.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=p(),b=N.tabGroupChoices,y=N.setTabGroupChoices,w=(0,i.useState)(v),x=w[0],C=w[1],E=[],T=(0,c.o5)().blockElementScrollPositionUntilNextRender;if(null!=u){var I=b[u];null!=I&&I!==x&&f.some((function(e){return e.value===I}))&&C(I)}var S=function(e){var t=e.currentTarget,n=E.indexOf(t),a=f[n].value;a!==x&&(T(t),C(a),null!=u&&y(u,a))},P=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=E.indexOf(e.currentTarget)+1;n=E[a]||E[0];break;case"ArrowLeft":var r=E.indexOf(e.currentTarget)-1;n=E[r]||E[E.length-1]}null==(t=n)||t.focus()};return i.createElement("div",{className:"tabs-container"},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,d.Z)("tabs",{"tabs--block":l},h)},f.map((function(e){var t=e.value,n=e.label;return i.createElement("li",{role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,className:(0,d.Z)("tabs__item",m,{"tabs__item--active":x===t}),key:t,ref:function(e){return E.push(e)},onKeyDown:P,onFocus:S,onClick:S},null!=n?n:t)}))),r?(0,i.cloneElement)(k.filter((function(e){return e.props.value===x}))[0],{className:"margin-vert--md"}):i.createElement("div",{className:"margin-vert--md"},k.map((function(e,t){return(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==x})}))))}function k(e){var t=(0,o.Z)();return i.createElement(h,(0,a.Z)({key:String(t)},e))}var f=function(e){var t=e.children,n=e.hidden,a=e.className;return i.createElement("div",{role:"tabpanel",hidden:n,className:a},t)},g=["components"],v={sidebar_position:1},N="Auth",b={unversionedId:"guides/examples/auth",id:"guides/examples/auth",isDocsHomePage:!1,title:"Auth",description:"Every application has business logic related with the current authorized user.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/guides/examples/auth.mdx",sourceDirName:"guides/examples",slug:"/guides/examples/auth",permalink:"/en/docs/guides/examples/auth",editUrl:"https://github.com/feature-sliced/documentation/edit/master/website/i18n/en/docusaurus-plugin-content-docs/current/guides/examples/auth.mdx",tags:[],version:"current",lastUpdatedAt:1644784518,formattedLastUpdatedAt:"2/13/2022",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"guidesSidebar",previous:{title:"\ud83d\udee0 Overview",permalink:"/en/docs/guides/examples"},next:{title:"PageLayout",permalink:"/en/docs/guides/examples/page-layout"}},y=[{value:"Entities",id:"entities",children:[{value:"Examples",id:"examples",children:[],level:3},{value:"<code>index.ts</code>",id:"indexts",children:[],level:3},{value:"<code>ui</code>",id:"ui",children:[],level:3},{value:"<code>model</code>",id:"model",children:[],level:3}],level:2},{value:"Features",id:"features",children:[{value:"Examples",id:"examples-1",children:[],level:3},{value:"<code>ui</code>",id:"ui-1",children:[],level:3}],level:2},{value:"Pages",id:"pages",children:[{value:"Examples",id:"examples-2",children:[],level:3},{value:"<code>ui</code>",id:"ui-2",children:[],level:3}],level:2},{value:"Processes",id:"processes",children:[{value:"Examples",id:"examples-3",children:[],level:3}],level:2},{value:"App",id:"app",children:[{value:"Examples",id:"examples-4",children:[],level:3}],level:2},{value:"Conclusions",id:"conclusions",children:[],level:2},{value:"FAQ",id:"faq",children:[{value:"How to pass a token",id:"how-to-pass-a-token",children:[],level:3},{value:"Login",id:"login",children:[],level:3},{value:"Logout",id:"logout",children:[],level:3}],level:2},{value:"See also",id:"see-also",children:[],level:2}],w={toc:y};function x(e){var t=e.components,n=(0,r.Z)(e,g);return(0,l.kt)("wrapper",(0,a.Z)({},w,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"auth"},"Auth"),(0,l.kt)("p",null,"Every application has business logic related ",(0,l.kt)("strong",{parentName:"p"},"with the current authorized user.")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Usually such an entity is called ",(0,l.kt)("inlineCode",{parentName:"p"},"Viewer")," / ",(0,l.kt)("inlineCode",{parentName:"p"},"Principle")," / ",(0,l.kt)("inlineCode",{parentName:"p"},"Session")," - but within the framework of the article, we will focus on ",(0,l.kt)("inlineCode",{parentName:"p"},"viewer"),", but it all depends on your project and team")),(0,l.kt)("p",null,"Also, this is one of the illustrative examples when a business entity generates business features, then pages, and even business processes"),(0,l.kt)("p",null,"Let's look at them in more detail below with examples"),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("ol",{parentName:"div"},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"The names of the directories inside the segments (ui, model) may differ from project to project"),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("em",{parentName:"p"},"The methodology does not regulate this level of nesting in any way yet"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"It should also be understood that the examples below are abstract and synthetic, and are formed to demonstrate only the concepts of the methodology"),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("em",{parentName:"p"},"FeatureSliced does not regulate the best practices of a particular data-fetcher or state-manager")))))),(0,l.kt)("h2",{id:"entities"},"Entities"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"The business entity of the user")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Represents the most atomic abstraction for design"),(0,l.kt)("li",{parentName:"ul"},"Here the authorization context is formed, which is then usually relied on by all the overlying layers of the application")),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},'It should be understood that often there is a public "external" user (',(0,l.kt)("inlineCode",{parentName:"p"},"entities/user"),') in the application, and there is an authorized "internal" user (',(0,l.kt)("inlineCode",{parentName:"p"},"entities/viewer"),")"),(0,l.kt)("p",{parentName:"div"},(0,l.kt)("em",{parentName:"p"},"Do not forget to take this difference into account when designing architecture and logic")))),(0,l.kt)("h3",{id:"examples"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"# Segments can be both files and directories\n|\n\u251c\u2500\u2500 entities/viewer              # Layer: Business entities\n|         |                      #     Slice: Current user\n|         \u251c\u2500\u2500 ui/                #      Segment: UI-logic (components)\n|         \u251c\u2500\u2500 lib/               #      Segment: Infrastructure-logic (helpers/utils)\n|         \u251c\u2500\u2500 model/             #      Segment: Business Logic\n|         \u2514\u2500\u2500 index.ts           #      [Public API Declaration]\n|   ...           \n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"entities/viewer")," - the entity of the current user ",(0,l.kt)("em",{parentName:"li"},"(Session / Principle)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"entities/user")," - the essence of public user ",(0,l.kt)("em",{parentName:"li"},"(not necessarily associated with the current)"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"Depending on the complexity of your application - you can use the ",(0,l.kt)("inlineCode",{parentName:"em"},"user")," for naming the current user")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"But it can cause serious problems when/if I have to separate the logic of a normal user and current, who came into the system"))))),(0,l.kt)("h3",{id:"indexts"},(0,l.kt)("inlineCode",{parentName:"h3"},"index.ts")),(0,l.kt)("p",null,"The usual ",(0,l.kt)("a",{parentName:"p",href:"/docs/concepts/public-api"},"Public API of the module")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Largely repeats the API declaration for the layers described below")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=entities/user/ui/index.ts",title:"entities/user/ui/index.ts"},'export { ViewerCard } from "./card";\nexport { ViewerAvatar } from "./avatar";\n...\n')),(0,l.kt)(k,{mdxType:"Tabs"},(0,l.kt)(f,{value:"redux",label:"Redux",default:!0,mdxType:"TabItem"},(0,l.kt)("p",null,"In redux, the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/erikra/ducks-modular-redux"},"redux-ducks")," approach is generally accepted when its units (selectors/actions/...) they lie side by side and are clearly decomposed"),(0,l.kt)("p",null,"But explicit decomposition is not required"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=entities/user/model/index.ts",title:"entities/user/model/index.ts"},'export * as selectors from "./selectors";\nexport * as events from "./events";\nexport * as stores from "./stores";\n...\n'))),(0,l.kt)(f,{value:"effector",label:"Effector",mdxType:"TabItem"},(0,l.kt)("p",null,"The effector model will most often consist of a single file - because it is customary to store all units side by side there"),(0,l.kt)("p",null,"If the units in the model can be schematically divided into several submodels, then ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/feature-sliced/examples/pull/1#discussion_r654841332"},"you can explicitly do this")," denote in the Public API"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=entities/user/model/index.ts",title:"entities/user/model/index.ts"},'export * as submodel1 from "./submodel1"\nexport * as submodel2 from "./submodel2"\n...\n')))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=entities/user/index.ts",title:"entities/user/index.ts"},'export * from "./ui"\nexport * as viewerModel from "./model";\n')),(0,l.kt)("h3",{id:"ui"},(0,l.kt)("inlineCode",{parentName:"h3"},"ui")),(0,l.kt)("p",null,"It may contain components that are not related to a specific page/feature, but directly to the user's entity"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=entities/user/ui/card/index.tsx",title:"entities/user/ui/card/index.tsx"},'import { Card } from "shared/ui/card";\n\n// It is considered a good practice not to link ui components from entitites directly to the model\n// So that it can be used not only for the current model,\n// But also for externally received props\n\nexport type UserCardProps = {\n    data: User;\n    className?: string;\n    // And other card-props\n};\n\nexport const UserCard = ({ data, ... }: UserCardProps) => {\n    return (\n        <Card \n            title={data.fullName}\n            description={data.bio}\n            ...\n        />\n    )\n}\n')),(0,l.kt)("h3",{id:"model"},(0,l.kt)("inlineCode",{parentName:"h3"},"model")),(0,l.kt)("p",null,"At this level, the entity of the current user is usually created, with the re-export of hooks/contracts/selectors for use by the overlying layers"),(0,l.kt)(k,{mdxType:"Tabs"},(0,l.kt)(f,{value:"redux",label:"Redux",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"// entities/viewer/model/selectors.ts\nexport const useViewer = () => {\n    return useSelector((store) => store.entities.userSlice);\n}\nexport const useAuth = () => {\n    const viewer = useViewer();\n    return !!viewer\n}\n// entities/viewer/model/store.ts\nexport const userSlice = createSlice(...)\n"))),(0,l.kt)(f,{value:"effector",label:"Effector",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"// entities/viewer/model/index.ts\nexport const $viewer = createStore(...);\nexport const $isAuth = $viewer.map((viewer) => !!viewer);\n// **/**/ui.tsx\nconst viewer = useStore($viewer);\n")))),(0,l.kt)("p",null,"Also, other logic can be implemented here"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"updateUserDetails")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"logoutUser")),(0,l.kt)("li",{parentName:"ul"},"...")),(0,l.kt)("h2",{id:"features"},"Features"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Features tied to the current user")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Uses business entities (often ",(0,l.kt)("inlineCode",{parentName:"li"},"entities/viewer"),") and shared resources in the implementation"),(0,l.kt)("li",{parentName:"ul"},"Features may not be directly related to the viewer, but they can use its context when implementing logic")),(0,l.kt)("h3",{id:"examples-1"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},'# Segments can be both files and directories\n|\n\u251c\u2500\u2500 features/auth                # Layer: Business features\n|        |                       #    Slice Group: The structural group "User authorization"\n|        \u251c\u2500\u2500 by-phone/           #      Slice: Feature "Authorization by phone"\n|        |     \u251c\u2500\u2500 ui/           #         Segment: UI-logic (components)\n|        |     \u251c\u2500\u2500 lib/          #         Segment: Infrastructure-logic (helpers/utils)\n|        |     \u251c\u2500\u2500 model/        #         Segment: Business Logic\n|        |     \u2514\u2500\u2500 index.ts      #         [Public API Declaration]\n|        |\n|        \u251c\u2500\u2500 by-oauth/           #      Slice: Feature "Authorization by an external resource"\n|   ...           \n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"features/auth/{by-phone, by-oauth, logout ...}")," - ",(0,l.kt)("strong",{parentName:"li"},"structural")," group of authorization features ",(0,l.kt)("em",{parentName:"li"},"(by phone, by external resource, logout,...)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"features/wallet/{add-funds,...}")," - ",(0,l.kt)("strong",{parentName:"li"},"structural")," group of features for working with the user's internal account ",(0,l.kt)("em",{parentName:"li"},"(adding funds to the account,...)"))),(0,l.kt)("h3",{id:"ui-1"},(0,l.kt)("inlineCode",{parentName:"h3"},"ui")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Authorization by an external resource")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=features/auth/by-oauth/ui.tsx",title:"features/auth/by-oauth/ui.tsx"},'import { viewerModel } from "entities/viewer";\n\nexport const AuthByOAuth = () => {\n    return (\n        <OAuth\n            domain={...}\n            scope={...}\n            ...\n            // for redux, you additionally need dispatch\n            onSuccess={(user) => viewerModel.setUser(user)}\n        />\n    )\n}\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Using the user's context in features")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=features/wallet/ui.tsx",title:"features/wallet/ui.tsx"},'import { viewerModel } from "entities/viewer";\n\nexport const Wallet = () => {\n    const viewer = viewerModel.useViewer();\n    const { moneyCount } = viewer;\n    \n    ...\n}\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Using the viewer components")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=features/header/ui.tsx",title:"features/header/ui.tsx"},'import { ViewerAvatar } from "entities/viewer";\n...\nexport const Header = () => {\n    ...\n    return (\n        <Layout.Header>\n            ...\n            <ViewerAvatar\n                onClick={...}\n                onLogout={...}\n                ...\n            />\n        </Layout.Header>\n    )\n}\n')),(0,l.kt)("h2",{id:"pages"},"Pages"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Pages related to the current user in one way or another")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"They can both directly affect the functionality of the viewer"),(0,l.kt)("li",{parentName:"ul"},"And use it indirectly (including its context / features)")),(0,l.kt)("h3",{id:"examples-2"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},'# Segments can be both files and directories\n|\n\u251c\u2500\u2500 pages/viewer                 # Layer: Application pages\n|        |                       #    Slice Group: The "Current User" structural group\n|        \u251c\u2500\u2500 profile/            #     Slice: The viewer profile page\n|        |     \u251c\u2500\u2500 ui.tsx        #         Segment: UI-logic (components)\n|        |     \u251c\u2500\u2500 lib.ts        #         Segment: Infrastructure-logic (helpers/utils)\n|        |     \u251c\u2500\u2500 model.ts      #         Segment: Business Logic\n|        |     \u2514\u2500\u2500 index.ts      #         [Public API Declaration]\n|        |\n|        \u251c\u2500\u2500 settings/           #     Slice: The viewer account settings page\n|   ...           \n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"pages/viewer/profile")," - the user's LC page"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"pages/viewer/settings")," - user account settings page"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"pages/user")," - the user's page (not necessarily the current one)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"pages/auth/{sign-in, sign-up, reset}")," ",(0,l.kt)("strong",{parentName:"li"},"structural")," group of authorization pages ",(0,l.kt)("em",{parentName:"li"},"(login / registration / password recovery)"))),(0,l.kt)("h3",{id:"ui-2"},(0,l.kt)("inlineCode",{parentName:"h3"},"ui")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Using the viewer components and ",(0,l.kt)("em",{parentName:"li"},"viewer-based")," features on the pages")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=pages/user/ui.tsx",title:"pages/user/ui.tsx"},'import { Wallet } from "features/wallet";\nimport { ViewerCard } from "entities/viewer";\n...\nexport const UserPage = () => {\n    ...\n    return (\n        <Layout>\n            <Header\n                extra={<Wallet.AddFunds />}\n            />\n            ...\n            <ViewerCard />\n        </Layout>\n    )\n}\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Using the viewer model")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=pages/some/ui.tsx",title:"pages/some/ui.tsx"},'import { viewerModel } from "entities/viewer";\n...\nexport const SomePage = () => {\n    ...\n    return (\n        <Layout>\n            ...\n            <Settings onSave={(payload) => viewerModel.saveChanges(payload)} />\n        </Layout>\n    )\n}\n')),(0,l.kt)("h2",{id:"processes"},"Processes"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Business processes affecting the current user")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Affects user cases that permeate the pages of the system"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"The process layer is optional"),", and is usually used ",(0,l.kt)("em",{parentName:"li"},"only when the logic grows in pages")," and you need ",(0,l.kt)("em",{parentName:"li"},"separate context management")," on several pages at once")),(0,l.kt)("h3",{id:"examples-3"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"# Segments can be both files and directories\n|\n\u251c\u2500\u2500 processes                    # Layer: Business processes\n|        \u251c\u2500\u2500 auth/               #     Slice: User authorization process\n|        |     \u251c\u2500\u2500 lib.ts        #         Segment: Infrastructure-logic (helpers/utils)\n|        |     \u251c\u2500\u2500 model.ts      #         Segment: Business Logic\n|        |     \u2514\u2500\u2500 index.ts      #         [Public API Declaration]\n|        |\n|        \u251c\u2500\u2500 quick-tour/         #     Slice: The process of onboarding a new user\n|   ...           \n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"processes/auth")," - the business process of user authorization"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"processes/quick-tour")," - a business process for familiarizing the user with the system ",(0,l.kt)("em",{parentName:"li"},"(~ UserOnboard)"))),(0,l.kt)("h2",{id:"app"},"App"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Initialization of user account data")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"There is usually a check on whether the user ",(0,l.kt)("strong",{parentName:"li"},"was already logged in")," before he entered the service",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"If yes")," - the provider replenishes the user's context for further use in the system"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"If not")," - the authorization process is started or the context of the viewer is changed so that the authorization page takes the necessary actions")))),(0,l.kt)("h3",{id:"examples-4"},"Examples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"# The `app` structure is unique for each project and is not regulated by the methodology\n|\n\u251c\u2500\u2500 app/providers                # Layer: Initializing the application (HOCs providers)\n|        \u251c\u2500\u2500 withAuth.tsx        #    HOC: Initializing the authorization context\n|        |   ...                 #\n|   ...           \n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"app/providers/withAuth")," - HOC for user authorization",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Used ",(0,l.kt)("strong",{parentName:"li"},"only at the top level, as a provider")," with logic initialization, to which only ",(0,l.kt)("em",{parentName:"li"},(0,l.kt)("strong",{parentName:"em"},"app"),"-layer")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Not to be confused with the ",(0,l.kt)("inlineCode",{parentName:"strong"},"useViewer")," hook"),", which is accessed by all other layers ",(0,l.kt)("em",{parentName:"li"},"(processes / pages / features)"))),(0,l.kt)("h2",{id:"conclusions"},"Conclusions"),(0,l.kt)("p",null,"As we can see in the examples above - ",(0,l.kt)("strong",{parentName:"p"},"all business logic begins to be built from a single entity, and can spread to the very top layer.")),(0,l.kt)("p",null,"Therefore, you need to be able to ",(0,l.kt)("strong",{parentName:"p"},"correctly allocate the scope of the module's influence"),", and depending on this, choose the appropriate layer for the location of the logic."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Thus, we will get the most supported, readable and reused code.")),(0,l.kt)("h2",{id:"faq"},"FAQ"),(0,l.kt)(s.ZP,{ticket:"176",mdxType:"WIP"}),(0,l.kt)("h3",{id:"how-to-pass-a-token"},"How to pass a token"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("a",{parentName:"p",href:"https://t.me/feature_sliced/4618"},"https://t.me/feature_sliced/4618"))),(0,l.kt)("h3",{id:"login"},"Login"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("a",{parentName:"p",href:"https://t.me/feature_sliced/3227"},"https://t.me/feature_sliced/3227"))),(0,l.kt)("h3",{id:"logout"},"Logout"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("a",{parentName:"p",href:"https://t.me/feature_sliced/3227"},"https://t.me/feature_sliced/3227"))),(0,l.kt)("h2",{id:"see-also"},"See also"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/feature-sliced/documentation/discussions/65"},'Discussion "The applicability of feature-sliced in combat"')," (",(0,l.kt)("em",{parentName:"li"},"there are also examples with viewer")," inside)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://t.me/feature_sliced/342"},"Question about the user's profile and identity (community-chat)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://t.me/feature_sliced/552"},"Explanation about UIKIT#Card and User#Card (community-chat)"))))}x.isMDXComponent=!0}}]);