"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3463],{7235:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return p},default:function(){return u}});var n=a(3117),r=a(102),i=(a(7294),a(4137)),s=["components"],o={sidebar_position:4},l="Pages",d={unversionedId:"reference/layers/pages",id:"reference/layers/pages",isDocsHomePage:!1,title:"Pages",description:"At the moment, active discussions are underway regarding this layer:",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/reference/layers/pages.md",sourceDirName:"reference/layers",slug:"/reference/layers/pages",permalink:"/en/docs/reference/layers/pages",editUrl:"https://github.com/feature-sliced/documentation/edit/master/website/i18n/en/docusaurus-plugin-content-docs/current/reference/layers/pages.md",tags:[],version:"current",lastUpdatedAt:1635073101,formattedLastUpdatedAt:"10/24/2021",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"referenceSidebar",previous:{title:"Processes",permalink:"/en/docs/reference/layers/processes"},next:{title:"Widgets",permalink:"/en/docs/reference/layers/widgets"}},p=[{value:"Description",id:"description",children:[],level:2},{value:"Structure",id:"structure",children:[],level:2},{value:"Examples",id:"examples",children:[{value:"Checkout page",id:"checkout-page",children:[],level:3}],level:2}],c={toc:p};function u(e){var t=e.components,o=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"pages"},"Pages"),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"At the moment, active discussions are underway regarding this layer:"),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"is the page the same slice"),(0,i.kt)("li",{parentName:"ul"},"can the page hierarchy be fractal in order to repeat the structure of routes"),(0,i.kt)("li",{parentName:"ul"},"etc.")),(0,i.kt)("p",{parentName:"div"},"Therefore, here is an overview of this layer"))),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"pages-themed-bordered",src:a(690).Z})),(0,i.kt)("h2",{id:"description"},"Description"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Here are the application pages"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"corresponding to a specific route"),(0,i.kt)("li",{parentName:"ul"},"if necessary - grouped by a shared folder / parent page"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Each page should have ",(0,i.kt)("strong",{parentName:"p"},"as simple logic as possible")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"all the logic of display, business rules and other things-should be implemented by composing the underlying layers (",(0,i.kt)("inlineCode",{parentName:"li"},"shared"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"entitites"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"features"),")"),(0,i.kt)("li",{parentName:"ul"},"while the interaction between the underlying layers - should also be carried out most often on the page",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"That is, if ",(0,i.kt)("inlineCode",{parentName:"em"},"featureA")," affects ",(0,i.kt)("inlineCode",{parentName:"em"},"featureB")," on a certain page - this logic should be written in the model of the page itself and only on it!")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("em",{parentName:"li"},"Without the code in the features themselves, and even more so, cross-imports!"))))))),(0,i.kt)("h2",{id:"structure"},"Structure"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"\u2514\u2500\u2500 pages/{slice}\n          \u251c\u2500\u2500 index.ts\n          \u251c\u2500\u2500 lib.ts\n          \u251c\u2500\u2500 model.ts\n          \u2514\u2500\u2500 ui.tsx\n")),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("h3",{id:"checkout-page"},"Checkout page"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"The implementation of the BL order depends very much on your project, sometimes it can be regulated by processes. Therefore, only one of the implementations is given here")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"title=pages/**/index.tsx",title:"pages/**/index.tsx"},'import { Order } from "features/order";\nimport { ProductCard } from "entities/product";\nimport { orderModel } from "entities/order";\nimport { Layout } from "shared/ui/layout"\n\nexport const CartPage = () => {\n    const order = orderModel.useOrder();\n    \n    // Very conditional markup\n    return (\n        {/** Using shared (Layout) */}\n        <Layout>\n            <Layout.Main>\n                ...\n                {/** Using entities (order.items, ProductCard)*/}\n                {order.items.map((item) => (\n                    <ProductCard key={item.id} data={item} />\n                ))}\n            </Layout.Main>\n            <Layout.Sidebar>\n                ...\n                {/** Using features (Order. TotalInfo)*/}\n                <Order.TotalInfo />\n            </Layout.Sidebar>\n        </Layout>\n    )\n}\n')))}u.isMDXComponent=!0},690:function(e,t,a){t.Z=a.p+"assets/images/pages-ca9c30c09a1951fdcd9f30b30204161b.png"}}]);