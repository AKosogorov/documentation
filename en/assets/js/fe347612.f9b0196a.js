"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[531],{6100:function(e,t,s){s.r(t),s.d(t,{frontMatter:function(){return p},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return d},default:function(){return m}});var a=s(3117),n=s(102),r=(s(7294),s(4137)),i=s(6889),o=["components"],p={sidebar_position:6,sidebar_class_name:"sidebar-item--wip"},u="Types",c={unversionedId:"guides/examples/types",id:"guides/examples/types",isDocsHomePage:!1,title:"Types",description:"The types are different",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/guides/examples/types.mdx",sourceDirName:"guides/examples",slug:"/guides/examples/types",permalink:"/en/docs/guides/examples/types",editUrl:"https://github.com/feature-sliced/documentation/edit/master/website/i18n/en/docusaurus-plugin-content-docs/current/guides/examples/types.mdx",tags:[],version:"current",lastUpdatedAt:1635072443,formattedLastUpdatedAt:"10/24/2021",sidebarPosition:6,frontMatter:{sidebar_position:6,sidebar_class_name:"sidebar-item--wip"},sidebar:"tutorialSidebar",previous:{title:"Auth",permalink:"/en/docs/guides/examples/auth"},next:{title:"Browser API",permalink:"/en/docs/guides/examples/browser-api"}},d=[],l={toc:d};function m(e){var t=e.components,s=(0,n.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},l,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"types"},"Types"),(0,r.kt)(i.ZP,{ticket:"179",mdxType:"WIP"}),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"The types are different")),(0,r.kt)("p",{parentName:"blockquote"},"This may be as a utility type (",(0,r.kt)("inlineCode",{parentName:"p"},"Maybe"),") and subject area (Tls Contract, Camera, ...)"),(0,r.kt)("p",{parentName:"blockquote"},"1) what refers to The subject area is usually better to put in the shared/api (especially when there is a code generation in one place)\n(for entities such spraying PTS released)\n2) Common service types that you can segelerite - same-react-app-env.d.ts"),(0,r.kt)("p",{parentName:"blockquote"},"3) And if you have service types and you need to import right everywhere, then it's not critical especially, you can also put it in shared, you can also put it next to react-app.env.dts"),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"https://t.me/feature_sliced/3879"},"https://t.me/feature_sliced/3879")),(0,r.kt)("p",{parentName:"blockquote"},"4) It makes sense to store normalized types for entities in entities"),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"https://t.me/feature_sliced/4513"},"https://t.me/feature_sliced/4513"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"https://t.me/feature_sliced/3877"},"https://t.me/feature_sliced/3877"))))}m.isMDXComponent=!0}}]);